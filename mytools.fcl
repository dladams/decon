#include "load_dataprep.fcl"
#include "wc2dresponseNbin1.fcl"
#include "wc2dresponseNbin5.fcl"
#include "wc2dresponseNbin10.fcl"
#include "wc2dresponseNbin20.fcl"
#include "wc2ddecon.fcl"

tools.conv2dNbin1x.LogLevel: 5

tools.wf: @local::tools.adcPlotPrepared

# Diagonal response.
# These are the Oct 2020 offset -2 values
data.ResponseVectorU: [
   0.00123846,  0.00139574,  0.00158327,  0.00180854,  0.00208124,  0.00241413,  0.00282647,  0.00337392,  0.00433854,  0.00655272,
    0.0109848,   0.0179115,   0.0266767,    0.035219,   0.0393419,    0.034815,   0.0212409,  0.00253496,  -0.0157293,  -0.0290488,
   -0.0354568,  -0.0355463,   -0.031474,  -0.0256824,  -0.0198311,   -0.014658,  -0.0103759, -0.00699765,  -0.0044654, -0.00267745,
  -0.00149777,-0.000775304, -0.00036739,-0.000156911,-5.89844e-05,-1.88179e-05, -4.8794e-06,  -1.121e-06,-4.83491e-07,-4.28621e-07
]
data.ResponseVectorV: [
   0.00023318, 0.000258945,  0.00028891, 0.000323924, 0.000365023, 0.000413484, 0.000471287, 0.000546042, 0.000682586,  0.00101444,
   0.00169017,  0.00274497,  0.00414105,  0.00600755,  0.00890356,   0.0136016,    0.020446,   0.0287503,   0.0359051,   0.0374584,
    0.0302649,   0.0154112, -0.00293334,   -0.020367,  -0.0329147,  -0.0382135,  -0.0365549,  -0.0302588,  -0.0221915,  -0.0145915,
  -0.00863804,  -0.0045918, -0.00216836,-0.000888679,-0.000301458, -7.6215e-05,-1.10614e-05,-1.92908e-06, -4.8822e-06,-6.42341e-06
]
data.ResponseVectorX: [
   4.3648e-05, 4.80077e-05, 5.29995e-05, 5.87355e-05, 6.53484e-05, 7.29987e-05, 8.19575e-05, 9.34966e-05, 0.000115576, 0.000171926,
  0.000288335, 0.000469116, 0.000703668,  0.00100676,  0.00146128,  0.00218491,  0.00325212,  0.00473977,   0.0069598,   0.0105867,
    0.0163138,   0.0247836,   0.0400853,   0.0694278,    0.107394,    0.137591,    0.147338,    0.135277,    0.108848,    0.077898,
    0.0499836,   0.0287999,    0.014816,  0.00669725,    0.002569, 0.000771684, 0.000140983,-5.75054e-06, -3.2669e-06, 1.78128e-05
]

# First off-diagonal reponse.
data.ResponseVector1U: [
  0.000889634, 0.000965896,  0.00104907,  0.00113889,   0.0012344,  0.00133356,  0.00143407,  0.00154782,  0.00179573,  0.00254169,
   0.00410543,  0.00629946,  0.00843081,  0.00970031,  0.00963031,  0.00810141,  0.00517617,  0.00114037, -0.00335132, -0.00736211,
   -0.0100897,  -0.0112417,  -0.0110774,  -0.0101387, -0.00881604, -0.00728739, -0.00567762, -0.00413326, -0.00279429, -0.00174626,
  -0.00100399,-0.000527475,-0.000250499,-0.000105614,-3.83444e-05,-1.13856e-05,-2.59752e-06,-6.01107e-07,-4.58944e-07,-4.96721e-07
]
data.ResponseVector1V: [
  0.000181024,   0.0001964, 0.000213444, 0.000232312, 0.000253154, 0.000276114, 0.000301652, 0.000334001, 0.000403215, 0.000599062,
   0.00101449,  0.00165215,  0.00244546,  0.00339616,  0.00469282,  0.00653809,    0.008785,   0.0108319,   0.0118956,   0.0113587,
   0.00893208,  0.00474577,-0.000732143, -0.00674326,  -0.0118507,  -0.0146568,  -0.0147394,  -0.0127086, -0.00964837, -0.00654165,
  -0.00398468, -0.00217827, -0.00105895,-0.000448152,-0.000157841,-4.16287e-05,-5.79976e-06, 1.62581e-07,-1.24823e-06,-2.47367e-06
]
data.ResponseVector1X: [
  3.54585e-05, 3.83627e-05, 4.15845e-05, 4.51601e-05, 4.91283e-05, 5.35343e-05, 5.84965e-05, 6.49058e-05, 7.88583e-05, 0.000118528,
  0.000202989, 0.000333655, 0.000498961, 0.000703454, 0.000996654,  0.00144628,  0.00207812,  0.00289177,  0.00397673,  0.00553981,
     0.007614,  0.00961312,  0.00989135,   0.0065796, 0.000289182, -0.00621532,  -0.0104682,  -0.0116644,  -0.0104354, -0.00797941,
  -0.00535543, -0.00318641, -0.00167757,-0.000769707,-0.000296162,-8.64769e-05,-1.26353e-05, 3.69538e-06, 2.15692e-06,-1.37468e-06
]

# Second off diagonal
data.ResponseVector2U: [
  0.000301878, 0.000278552, 0.000243603,  0.00019379, 0.000125203, 3.34149e-05,-8.56191e-05,-0.000230406,-0.000366374,-0.000392173,
 -0.000225586, 8.05792e-05, 0.000367811, 0.000501654, 0.000474536, 0.000362206, 0.000198912,-5.14795e-05,-0.000412819, -0.00082776,
  -0.00119622, -0.00145487, -0.00161291, -0.00171642, -0.00175378,  -0.0016756, -0.00146727, -0.00116864, -0.00084595,-0.000556996,
 -0.000333341,-0.000180549,-8.76204e-05,-3.73527e-05,-1.34602e-05,-3.78087e-06,-6.76969e-07,-6.07635e-08,-1.04611e-07,-1.78121e-07
]
data.ResponseVector2V: [
  7.98121e-05, 7.89337e-05, 7.66877e-05, 7.26525e-05, 6.63129e-05, 5.70726e-05, 4.44317e-05, 2.94832e-05, 2.38235e-05, 6.17706e-05,
  0.000174426, 0.000351117, 0.000547504, 0.000732284, 0.000923159,  0.00114597,  0.00135915,  0.00146133,  0.00138745,   0.0011685,
  0.000861206, 0.000458767,-0.000121036,-0.000929196, -0.00177867, -0.00236443, -0.00251376, -0.00226383, -0.00178073, -0.00124451,
 -0.000779051,-0.000437094,-0.000218147,-9.49767e-05,-3.45689e-05,-9.48502e-06,-1.33674e-06, 2.01222e-07,-5.96432e-08,-3.86586e-07
]
data.ResponseVector2X: [
   1.8178e-05, 1.84746e-05, 1.86263e-05,  1.8582e-05, 1.82773e-05, 1.76405e-05, 1.66338e-05,   1.562e-05, 1.76067e-05, 3.14924e-05,
   6.5897e-05, 0.000119575, 0.000183546,  0.00025399, 0.000343093, 0.000466641, 0.000619495, 0.000778193,  0.00093524,   0.0011079,
   0.00127954,  0.00134749,  0.00111739, 0.000427309,-0.000555995, -0.00143787, -0.00192011, -0.00194834, -0.00165251, -0.00121862,
 -0.000795538,-0.000462453,-0.000238352,-0.000107075,-4.02566e-05,-1.14223e-05,-1.59852e-06, 4.31778e-07,  1.6367e-07,-2.90921e-07
]


data.ResponseVector3U: [
 -4.08663e-05,-8.46397e-05, -0.00013612,-0.000196071, -0.00026513,-0.000343649,-0.000431313, -0.00052542,-0.000611902,-0.000654569,
 -0.000622568,-0.000526204,-0.000409011,-0.000312271,-0.000247045,-0.000201426,-0.000168558, -0.00015576, -0.00016933, -0.00020057,
 -0.000233394,-0.000259839,-0.000285816,-0.000320788,-0.000353918,-0.000362608,-0.000335217,-0.000278003,-0.000207457,-0.000139856,
 -8.52973e-05,-4.69293e-05,-2.30767e-05,-9.94341e-06,-3.60624e-06, -1.0054e-06,-1.63709e-07, 1.10932e-09, -1.6898e-08,-4.32144e-08
]
data.ResponseVector3V: [
  5.62552e-06,-1.81556e-06,-1.07728e-05, -2.1468e-05,-3.41311e-05,-4.89721e-05,-6.60835e-05, -8.4877e-05,-0.000100968, -0.00010221,
 -7.80641e-05,-3.25696e-05,  1.8551e-05, 6.21646e-05, 9.88941e-05, 0.000135614,  0.00016858, 0.000182799, 0.000169114, 0.000135178,
  9.22791e-05, 3.80302e-05,-4.69745e-05,-0.000178496,-0.000325745,-0.000431563,-0.000460804,-0.000417295,-0.000330033,-0.000231839,
 -0.000145847,-8.22356e-05,-4.12592e-05, -1.8072e-05,-6.62809e-06,-1.83922e-06,-2.65262e-07, 4.09991e-08,-4.78903e-09,-6.82793e-08
]
data.ResponseVector3X: [
  3.53387e-06, 2.37036e-06,  9.4554e-07, -7.8419e-07,-2.86663e-06,-5.34897e-06,-8.25537e-06,-1.14317e-05,-1.36458e-05,-1.13769e-05,
 -1.43373e-06, 1.52462e-05, 3.44334e-05, 5.31523e-05, 7.32939e-05, 9.82174e-05, 0.000125872, 0.000149175, 0.000164479, 0.000175328,
  0.000182262, 0.000172734, 0.000120046, 2.79335e-06,-0.000150839,-0.000280475,-0.000343184,-0.000334332,-0.000276851,-0.000200863,
  -0.00012953,-7.45448e-05,-3.80821e-05,-1.69646e-05,-6.32455e-06,-1.77948e-06,-2.49674e-07, 5.97057e-08, 1.62388e-08,-5.21316e-08
]

data.ResponseVector4U: [
 -0.000156496,-0.000189149,-0.000224628,-0.000262813,-0.000303465,-0.000346177,-0.000390265, -0.00043411,-0.000471371,  -0.0004864,
 -0.000465696,-0.000412598,-0.000344384,-0.000278982,-0.000224496,-0.000180011,-0.000143529,-0.000115749,-9.74421e-05,-8.64111e-05,
 -7.90976e-05,-7.38911e-05,-7.22689e-05,-7.62208e-05, -8.2422e-05,-8.44443e-05,-7.85564e-05,-6.56252e-05,-4.93073e-05,-3.34435e-05,
 -2.05092e-05,-1.13411e-05,-5.60367e-06,-2.42583e-06,-8.83649e-07,-2.46936e-07, -3.9469e-08, 1.51707e-09,-3.03461e-09,-9.92228e-09
]
data.ResponseVector4V: [
 -2.70254e-05,-3.39221e-05,-4.15783e-05,-5.00189e-05,-5.92498e-05,-6.92453e-05,-7.99096e-05,-9.08647e-05,-0.000100262,-0.000103313,
 -9.58834e-05,-7.92369e-05,-5.90372e-05,-4.06505e-05,-2.54405e-05, -1.2067e-05,-5.98656e-07, 6.64091e-06, 8.17191e-06, 5.59121e-06,
  1.17907e-06,-5.43153e-06,-1.80068e-05,-3.98219e-05,-6.53163e-05,-8.37315e-05,-8.82909e-05, -7.9524e-05,-6.27407e-05,-4.40275e-05,
 -2.76895e-05,-1.56162e-05,-7.84009e-06,-3.43809e-06,-1.26353e-06,-3.52076e-07,-5.15296e-08, 7.58525e-09,-7.24126e-10,-1.27229e-08
]
data.ResponseVector4X: [
 -4.18357e-06,-5.51794e-06,-7.02077e-06,-8.70434e-06,-1.05789e-05,-1.26498e-05, -1.4907e-05,-1.72645e-05,-1.92139e-05,-1.93831e-05,
 -1.65673e-05,-1.11457e-05,-4.77471e-06, 1.13059e-06, 6.59692e-06, 1.23455e-05, 1.80339e-05,  2.2172e-05, 2.39203e-05, 2.40811e-05,
  2.32942e-05, 2.00184e-05, 1.02221e-05, -9.3609e-06,-3.39906e-05,-5.39027e-05, -6.2412e-05,-5.91562e-05, -4.8186e-05,-3.45718e-05,
 -2.21089e-05,-1.26383e-05,-6.41895e-06,-2.84429e-06,-1.05506e-06,-2.95656e-07, -4.1888e-08, 8.87137e-09, 1.63614e-09,-9.35461e-09
]


data.ResponseVectors: [ @local::data.ResponseVectorU, @local::data.ResponseVectorV, @local::data.ResponseVectorX]
data.ResponseVectors1: [ @local::data.ResponseVector1U, @local::data.ResponseVector1V, @local::data.ResponseVector1X]
data.ResponseVectors2: [ @local::data.ResponseVector2U, @local::data.ResponseVector2V, @local::data.ResponseVector2X]
data.ResponseVectors3: [ @local::data.ResponseVector2U, @local::data.ResponseVector2V, @local::data.ResponseVector2X]
data.ResponseVectors4: [ @local::data.ResponseVector2U, @local::data.ResponseVector2V, @local::data.ResponseVector2X]
data.ResponseCenters: [25, 25, 25]

data.EmptyVectors: [[]]
data.EmptyVector:  []

data.FilterVector: [0.1, 0.2, 0.4, 0.2, 0.1]
# sigma = 3 tick
data.FilterVector: [4.46101e-05,0.00016009,0.000514093,0.00147728,0.00379866,0.00874063,0.017997,0.033159,0.05467,0.0806569,0.106483,0.125794,0.132981,0.125794,0.106483,0.0806569,0.05467,0.033159,0.017997,0.00874063,0.00379866,0.00147728,0.000514093,0.00016009,4.46101e-05]
# sigma = 5 tick
data.FilterVector: [2.6766e-05,5.83894e-05,0.00012238,0.000246444,0.000476818,0.00088637,0.00158309,0.00271659,0.00447891,0.00709492,0.0107982,0.01579,0.0221842,0.0299455,0.0388372,0.0483941,0.0579383,0.0666449,0.073654,0.0782085,0.0797885,0.0782085,0.073654,0.0666449,0.0579383,0.0483941,0.0388372,0.0299455,0.0221842,0.01579,0.0107982,0.00709492,0.00447891,0.00271659,0.00158309,0.00088637,0.000476818,0.000246444,0.00012238,5.83894e-05,2.6766e-05]
data.FilterVectors: [@local::data.FilterVector, @local::data.FilterVector, @local::data.FilterVector]

#data.SmoothVectorX: [0.1, 0.2, -0.2, -0.1]
data.SmoothVector: [-0.5, 1.0, -0.5]
data.SmoothVector: [-0.5, 1.0, -0.5]
#data.SmoothVector: [-0.1, -0.4, 1.0, -0.4, -0.1]
data.SmoothVectorX: [-0.5, 0.5]
data.SmoothVectors: [@local::data.SmoothVector, @local::data.SmoothVector, @local::data.SmoothVectorX]
data.SmoothScales: [18.0, 15.0,  8.0]
#data.SmoothScales: [11.6,  9.7,  5.0]


data.filterSigma:  3.0
data.filterWidth: -1.0   # Negative deactivates, 0 filters only DC
data.filterPower:  2.0

# Order is u, v, x
data.filterSigmas: [ @local::data.filterSigma, @local::data.filterSigma, @local::data.filterSigma]
data.filterWidths: [ @local::data.filterWidth, @local::data.filterWidth, -1.0]
data.filterPowers: [ @local::data.filterPower, @local::data.filterPower, @local::data.filterPower]

# Deconvolute with response function
tools.decon: {
  tool_type: AdcDeconvoluteFFT
  LogLevel: 1
  Action: 1
  ResponseVectors: @local::data.ResponseVectors
  ResponseCenters: @local::data.ResponseCenters
  SmoothVectors: [[]]
  SmoothScales: [1.0]
  GausFilterSigmas: @local::data.filterSigmas
  LowFilterWidths: @local::data.filterWidths
  LowFilterPowers: @local::data.filterPowers
  IndexMapTool: pdspChannelToPlane
}

# Direct matrix deconvolution.
tools.dmdecon: {
  tool_type: AdcDeconvoluteFFT
  LogLevel: 1
  Action: 6
  ResponseVectors: @local::data.ResponseVectors
  ResponseCenters: @local::data.ResponseCenters
  SmoothVectors: @local::data.EmptyVectors
  SmoothScales: @local::data.EmptyVector
  GausFilterSigmas: @local::data.filterSigmas
  LowFilterWidths: @local::data.filterWidths
  LowFilterPowers: @local::data.filterPowers
  IndexMapTool: pdspChannelToPlane
}

# Filtered matrix deconvolution.
tools.fmdecon: {
  tool_type: AdcDeconvoluteFFT
  LogLevel: 1
  Action: 7
  ResponseVectors: @local::data.ResponseVectors
  ResponseCenters: @local::data.ResponseCenters
  SmoothVectors: @local::data.FilterVectors
  SmoothScales: @local::data.EmptyVector
  GausFilterSigmas: @local::data.filterSigmas
  LowFilterWidths: @local::data.filterWidths
  LowFilterPowers: @local::data.filterPowers
  IndexMapTool: pdspChannelToPlane
}

# Chi-square matrix deconvolution.
tools.cmdecon: {
  tool_type: AdcDeconvoluteFFT
  LogLevel: 1
  Action: 8
  ResponseVectors: @local::data.ResponseVectors
  ResponseCenters: @local::data.ResponseCenters
  SmoothVectors: @local::data.SmoothVectors
  SmoothScales: @local::data.SmoothScales
  GausFilterSigmas: @local::data.filterSigmas
  LowFilterWidths: @local::data.filterWidths
  LowFilterPowers: @local::data.filterPowers
  IndexMapTool: pdspChannelToPlane
}

########################################################################
# Convolution tools.
########################################################################

# 1D Convolution with diagonal response
tools.convo: {
  tool_type: AdcDeconvoluteFFT
  LogLevel: 1
  Action: 2
  ResponseVectors: @local::data.ResponseVectors
  ResponseCenters: @local::data.ResponseCenters
  SmoothVectors: [[]]
  SmoothScales: [1.0]
  GausFilterSigmas: @local::data.filterSigmas
  LowFilterWidths: [-1.0, -1.0, -1.0]
  LowFilterPowers: [ 0.0,  0.0,  0.0]
  IndexMapTool: pdspChannelToPlane
}

# 1D Convolution with diagonal+1 response
tools.convo1: @local::tools.convo
tools.convo1.ResponseVectors: @local::data.ResponseVectors1

# 1D Convolution with diagonal+2 response
tools.convo2: @local::tools.convo
tools.convo2.ResponseVectors: @local::data.ResponseVectors2

# 1D Convolution with diagonal+3 response
tools.convo3: @local::tools.convo
tools.convo3.ResponseVectors: @local::data.ResponseVectors3

# 1D Convolution with diagonal+4 response
tools.convo4: @local::tools.convo
tools.convo4.ResponseVectors: @local::data.ResponseVectors4

# 1D Convolute with 1-tick Gaussian.
tools.convg1: {
  tool_type: AdcDeconvoluteFFT
  LogLevel: 1
  Action: 3
  ResponseVectors: [[]]
  ResponseCenters: []
  SmoothVectors: [[]]
  SmoothScales: [1.0]
  GausFilterSigmas: [1.0]
  LowFilterWidths: [-1.0]
  LowFilterPowers: [ 0.0]
  IndexMapTool: ""
}

# 1D Convolute with 2-tick Gaussian.
tools.convg2: @local::tools.convg1
tools.convg2.GausFilterSigmas: [2.0]

# 1D Convolute with 3-tick Gaussian.
tools.convg3: @local::tools.convg1
tools.convg3.GausFilterSigmas: [3.0]

########################################################################

tools.plotSamples: @local::tools.preparedAdcPlotter
tools.plotSamples.TickRange: plotAllTicks
tools.plotSamples.MinSignal: -0.1
tools.plotSamples.MaxSignal:  0.1

########################################################################

tools.plotDft: @local::tools.adcPlotDftTickPower
tools.plotDft.YMax: 10.0
tools.plotDft.YMax: 0.0
tools.plotDft.NBinX:   0
tools.plotDft.XMin:   0.0
tools.plotDft.XMax: 400.0
tools.plotDft.PlotName: "dftpwr_run%0RUN%_evt%0EVENT%_ch%0CHAN%.png"
tools.plotDft.HistTitle: "DFT power for run %RUN% event %EVENT% channel %CHAN%"

tools.plotDftBefore: @local::tools.plotDft
tools.plotDftBefore.PlotName: "dftpwrbefore_run%0RUN%_evt%0EVENT%_ch%0CHAN%.png"
tools.plotDftBefore.PlotName: ""
tools.plotDftBefore.HistTitle: ""
tools.plotDftBefore.HistSummaryTitles: ["DFT power before deconvolution for %CRNAME%", ""]
tools.plotDftBefore.PlotSummaryNames: ["dftpwrbefore_run%0RUN%_ch%0CHAN%.{png,tpad}", ""]
tools.plotDftBefore.PlotSizeX: 700
tools.plotDftBefore.PlotSizeY: 500
tools.plotDftBefore.PlotSplitX: 1
tools.plotDftBefore.PlotSplitY: 1

tools.plotDftAfter: @local::tools.plotDft
tools.plotDftAfter.PlotName: "dftpwrafter_run%0RUN%_evt%0EVENT%_ch%0CHAN%.png"
tools.plotDftAfter.PlotName: ""
tools.plotDftAfter.HistTitle: ""
tools.plotDftAfter.HistSummaryTitles: ["DFT power after deconvolution for %CRNAME%", ""]
tools.plotDftAfter.PlotSummaryNames: ["dftpwrafter_run%0RUN%_ch%0CHAN%.{png,tpad}", ""]
tools.plotDftAfter.PlotSizeX: 700
tools.plotDftAfter.PlotSizeY: 500
tools.plotDftAfter.PlotSplitX: 1
tools.plotDftAfter.PlotSplitY: 1

tools.plotDftAfter.LogLevel: 1

########################################################################

# Final signal finder, e.g. after deconvolution and rebaselining.
tools.deconSignalFinder: {
  tool_type: AdcThresholdSignalFinder
  LogLevel: 1
  Threshold: 1.0
  BinsBefore: 10
  BinsAfter: 10
  FlagPositive: true
  FlagNegative: false
}

# Final signal finder where deconvolution is not applied.
tools.nodeconSignalFinder: @local::tools.deconSignalFinder
tools.nodeconSignalFinder.Threshold: 0.4
tools.nodeconSignalFinder.FlagNegative: true

tools.adcChannelSamplelRmsPlotter.MetricLabel: "RMS [ke]"
tools.adcChannelSignalRmsPlotter.MetricLabel: "RMS [ke]"

########################################################################

tools.rebaselineSignalFinder: {
  tool_type: AdcThresholdSignalFinder
  LogLevel: 1
  Threshold: 1.0
  BinsBefore: 10
  BinsAfter: 10
  FlagPositive: true
  FlagNegative: false
}

tools.rebaseline: {
  tool_type: ExpTailPedRemover
  LogLevel: 3
  DecayTime: 0
  SignalFlag: 3
  SignalIterationLimit: 10
  SignalTool: rebaselineSignalFinder
  MaxTick: 21000
  PedDegree: 0
  PedTick0: 50
  PedFreqs: []
  NoWarnStatuses: [1]
  IncludeChannelRanges: ["apa3u", "apa3v"]
  ExcludeChannelRanges: []
}

# This only works with raw data, not samples
tools.adcPedestalFit: {
  tool_type: AdcPedestalFitter
  LogLevel: 1
  FitOpt: 1
  FitPrecision: 1.0
  SkipFlags: [8, 9, 10, 11, 12]
  AdcFitRange: 100
  FitRmsMin:  3.0
  FitRmsMax: 20.0
  RemoveStickyCode: true
  HistName: "adcped_ev%0EVENT%_ch%0CHAN%"
  HistTitle: "ADC pedestal fit for run %RUN% event %EVENT% channel %CHAN%"
  PlotFileName: ""
  RootFileName: ""
  HistManager: ""
  PlotSizeX: 0
  PlotSizeY: 0
  PlotSplitX: 0
  PlotSplitY: 0
  PlotShowFit: 1
}

########################################################################

# This ROI viewer creates the final charge histograms.

tools.roiViewer: @local::tools.adcRoiViewer
tools.roiViewer.SumHists: [
  {var:sigArea  name:"hsa_ch%0CHAN%"  title:"ROI signal area run %RUN% channel %CHAN%"    nbin:200  xmin:-50 xmax:150 fit:gaus  plot:"hsa_ch%0CHAN%.{png,tpad}"  pwid:0}
]
tools.roiViewer.SumPlotPadX: 1
tools.roiViewer.SumPlotPadY: 1

tools.roiViewerWide: @local::tools.roiViewer
tools.roiViewerWide.SumHists: [
  {var:sigArea  name:"hsa_ch%0CHAN%"  title:"ROI signal area run %RUN% channel %CHAN%"    nbin:250  xmin:-100 xmax:400 fit:gaus  plot:"hsa_ch%0CHAN%.{png,tpad}"  pwid:0}
]

tools.roiViewerWide2: @local::tools.roiViewer
tools.roiViewerWide2.SumHists: [
  {var:sigArea  name:"hsa_ch%0CHAN%"  title:"ROI signal area run %RUN% channel %CHAN%"    nbin:200  xmin:-100 xmax:700 fit:gaus  plot:"hsa_ch%0CHAN%.{png,tpad}"  pwid:0}
]

tools.roiViewer.LogLevel: 3
